{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.ts","webpack:///external \"mineflayer\"","webpack:///external \"fs\"","webpack:///./src/mcrealms.ts","webpack:///external \"node-fetch\"","webpack:///external \"process\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","promises","readFile","then","buffer","JSON","parse","toString","login","realm","mcrealms","username","password","client","worlds","server","servers","find","join","id","Promise","reject","joinInfo","address","split","host","port","parseInt","console","log","logErrors","version","MC_VERSION","bot","mineflayer","createBot","resolve","on","message","translate","jsonMsg","matches","command","trim","toLowerCase","length","chat","player","entity","position","floored","slice","reason","loggedIn","err","mcmanus","exit","require","accessToken","profile","this","cookie","path","headers","Cookie","getText","resp","status","text","body","getJSON","available","compatible","RealmsClient","data","method","stringify","clientToken","agent","AUTH_SERVER","json","selectedProfile"],"mappings":"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","file":"mcmanus.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as mineflayer from 'mineflayer';\nimport { promises } from 'fs';\nimport * as mcrealms from './mcrealms';\nimport { exit } from 'process';\n\ninterface LoginDetails {\n  host?: string\n  port?: number\n  realm?: string\n  username: string\n  password: string\n}\n\nfunction mcmanus(login: mineflayer.BotOptions): Promise<void> {\n  login.logErrors = true;\n  login.version = mcrealms.MC_VERSION;\n\n  const bot = mineflayer.createBot(login);\n\n  return new Promise((resolve, reject) => {\n    bot.on('chat', (username: string, message: string, translate: string, jsonMsg: string, matches: string[]): void => {\n      if (username == bot.username) {\n        return;\n      }\n      const command = message.trim().split(\" \");\n      if (command[0].toLowerCase() !== \"mcmanus\") {\n        return;\n      }\n      if (command.length === 1) {\n        bot.chat(\"what?\");\n        return;\n      }\n      switch (command[1]) {\n        case \"coords\":\n          bot.chat(bot.player.entity.position.floored().toString());\n          break;\n        case \"echo\":\n          bot.chat(command.slice(2).join(\" \"));\n          break;\n        case \"help\":\n          bot.chat(\"coords | echo | help\");\n          break;\n        default:\n          bot.chat(\"wat? \" + message);\n          break;\n      }\n    });\n  \n    bot.on('login', () => console.log('logged in'));\n  \n    bot.on('kicked', (reason, loggedIn) => {\n      console.log(reason, loggedIn)\n      reject(reason);\n    });\n  \n    bot.on('error', err => {\n      console.log(err);\n      reject(err);\n    });\n  });\n\n}\n\npromises.readFile('mcmanus.json')\n  .then((buffer) => JSON.parse(buffer.toString()))\n  .then((login) => {\n    if (login.realm) {\n      return mcrealms.login(login.username, login.password)\n      .then((client) => client.worlds()\n        .then((worlds) => {\n          const server = worlds.servers.find(server => server.name === login.realm)\n          if (server) {\n            return client.join(server.id);\n          }\n          return Promise.reject('realm not found');\n        })\n        .then((joinInfo) => {\n          const address = joinInfo.address.split(':')\n          login.host = address[0]\n          login.port = parseInt(address[1])\n          return login;\n        }))\n    }\n    return login;\n  })\n  .then((login) => {\n    console.log(\"joining\", {\n      realm: login.realm,\n      address: login.host + ':' + login.port\n    });\n    return mcmanus(login);\n  })\n  .catch((reason) => {\n    console.log(reason)\n    exit(1);\n  });","module.exports = require(\"mineflayer\");","module.exports = require(\"fs\");","\nimport fetch from 'node-fetch';\nimport { Response } from 'node-fetch';\n\n\nconst AUTH_SERVER = 'https://authserver.mojang.com';\nconst REALMS_SERVER = 'https://pc.realms.minecraft.net';\nconst CLIENT_TOKEN = 'mcmanus-token';\nexport const MC_VERSION = '1.16.2';\n\ninterface AuthProfile {\n  name: string\n  id: string\n}\n\nexport interface AuthResponse {\n  accessToken: string\n  selectedProfile: AuthProfile\n}\n\nexport interface ServerInfo {\n  id: number\n  remoteSubscriptionId: string\n  owner: string\n  ownerUUID: string\n  name: string\n  motd: string\n  state: \"ADMIN_LOCK\" | \"CLOSED\" | \"OPEN\" | \"UNINITIALIZED\"\n  daysLeft: number\n  expired: boolean\n  expiredTrial: boolean\n  worldType: \"NORMAL\" | \"MINIGAME\" | \"ADVENTUREMAP\" | \"EXPERIENCE\" | \"INSPIRATION\"\n  players: string[]\n  maxPlayers: number\n  minigameName?: string\n  minigameId?: number\n  minigameImage?: string\n  activeSlot: number\n  member: boolean\n}\n\ninterface WorldsResponse {\n  servers: ServerInfo[]\n}\n\ninterface JoinResponse {\n  address: string\n  pendingUpdate: boolean\n}\n\nexport class RealmsClient {\n  public accessToken: string\n  private profile: AuthProfile\n  private cookie: string\n\n  constructor(accessToken: string, profile: AuthProfile) {\n    this.accessToken = accessToken;\n    this.profile = profile;\n    this.cookie = \"sid=token:\" + accessToken + \":\" + profile.id +\n      \";user=\" + profile.name +\n      \";version=\" + MC_VERSION;\n  }\n\n  private get(path: string): Promise<Response> {\n    return fetch(REALMS_SERVER + path, {\n      headers: {\n        Cookie: this.cookie,\n      },\n    });\n  }\n\n  private getText(path: string): Promise<string> {\n    return this.get(path)\n      .then((resp) => {\n        if (resp.status != 200) {\n          return resp.text().then((body) => Promise.reject(body))\n        }\n        return resp.text()\n      });\n  }\n\n  private getJSON<T>(path: string): Promise<T> {\n    return this.getText(path)\n      .then((resp) => JSON.parse(resp));\n  }\n\n  public available(): Promise<boolean> {\n    return this.getText('/mco/available')\n      .then((body) => body.trim() === 'true');\n  }\n\n  public compatible(): Promise<\"OUTDATED\" | \"OTHER\" | \"COMPATIBLE\"> {\n    return this.getText('/mco/client/compatible')\n      .then((body) => {\n        body = body.trim();\n        switch (body) {\n          case 'OUTDATED':\n            return 'OUTDATED';\n          case 'OTHER':\n            return 'OTHER';\n          case 'COMPATIBLE':\n            return 'COMPATIBLE';\n          default:\n            return Promise.reject(body)\n        }\n      })\n  }\n\n  public worlds(): Promise<WorldsResponse> {\n    return this.getJSON('/worlds');\n  }\n\n  public join(id: number): Promise<JoinResponse> {\n    return this.getJSON('/worlds/v1/' + id + '/join/pc');\n  }\n}\n\nexport function login(username: string, password: string): Promise<RealmsClient> {\n  const data = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password,\n      clientToken: CLIENT_TOKEN,\n      agent: {\n        name: 'Minecraft',\n        version: 1,\n      },\n    }),\n  }\n  return fetch(AUTH_SERVER + '/authenticate', data).then((resp) => {\n    if (resp.status != 200) {\n      return resp.json().then((body) => Promise.reject(body));\n    }\n    return resp.json();\n  }).then((resp: AuthResponse): RealmsClient => {\n    return new RealmsClient(resp.accessToken, resp.selectedProfile);\n  });\n}","module.exports = require(\"node-fetch\");","module.exports = require(\"process\");"],"sourceRoot":""}